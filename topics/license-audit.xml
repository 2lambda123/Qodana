<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://resources.jetbrains.com/stardust/html-entities.dtd">

<topic xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/stardust/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       title="License audit"
       id="license-audit">

    <var name="feature" value="License audit"/>

    <p>Making sure that your project license is compatible with the licenses of its dependencies is never an easy task, but
        this is required for legal purposes. To automate this process and avoid mistakes, you can use %feature%
        currently supported by several %product% linters:</p>

    <table>
        <tr>
            <td>Linter</td>
            <td>Tools supported</td>
        </tr>
        <tr>
            <td><a href="qodana-jvm.md"/></td>
            <td>Maven and Gradle</td>
        </tr>
        <tr>
            <td><a href="qodana-php.md"/></td>
            <td>Composer</td>
        </tr>
        <tr>
            <td><a href="qodana-js.md"/></td>
            <td>npm and Yarn</td>
        </tr>
        <tr>
            <td><a href="qodana-python.md"/></td>
            <td>pip</td>
        </tr>
        <tr>
            <td><a href="qodana-go.md"/></td>
            <td>Go Modules</td>
        </tr>
    </table>

    <chapter title="How it works" id="license-audit-how-it-works">

        <p>%feature% collects information about project and dependency licenses using the IntelliJ IDEA project model,
            configuration files of dependency management tools, and files containing license texts. Based on the information
        collected, it analyzes which dependency licenses are (in)compatible with your project license.</p>

        <p>For example, a project is licensed under the Apache-2.0 license and uses three dependencies licensed under
            the MIT, GPL-2.0-only, and Apache-2.0 licenses. This table explains which dependency licenses are compatible
            with the project license.</p>

        <table>
            <tr>
                <td>Software</td>
                <td>Licensed under</td>
                <td>Compatible with the project license</td>
            </tr>
            <tr>
                <td>Project software</td>
                <td>Apache-2.0</td>
                <td>&mdash;</td>
            </tr>
            <tr>
                <td>Dependency A</td>
                <td>MIT</td>
                <td>Yes</td>
            </tr>
            <tr>
                <td>Dependency B</td>
                <td>GPL-2.0-only</td>
                <td>No</td>
            </tr>
            <tr>
                <td>Dependency C</td>
                <td>Apache-2.0</td>
                <td>Yes</td>
            </tr>
        </table>

        <p>After %product% has finished analyzing your project, the results become available in the
            <a anchor="license-audit-verifying-data">report</a>.</p>

    </chapter>

    <chapter title="Running %feature%" id="license-audit-running-feature">

            <p>While configuring <a href="qodana-yaml.md" anchor="exclude-paths">inspection scopes</a>, make sure that
            the file containing the build configuration is included in the scope.</p>

            <p>The <a href="qodana-jvm.md"/> and <a href="qodana-php.md"/> linters, as well as the
                <a href="qodana-js.md"/> linter using npm read information about project and dependency licenses from
                configuration files of package management tools.</p>

            <p>The <a href="qodana-python.md"/>, <a href="qodana-go.md"/>, and <a href="qodana-js.md"/> linter using
                Yarn require that a project license is contained in the <code>LICENSE</code> file in the project root.
                The <a href="qodana-python.md"/> linter also requires that the project directory contains no
                <code>.idea</code> file and the virtual environment directory. </p>

            <p>For all linters except <a href="qodana-jvm.md"/>, you also need to have project
                dependencies installed using the <a href="before-running-qodana.md"><code>bootstrap</code></a> option of
                the <a href="qodana-yaml.md"><code style="inline">qodana.yaml</code></a> file. To run %feature%, enable
                the <code>CheckDependencyLicenses</code> inspection. </p>

            <p>Below are the <code>qodana.yaml</code> configuration samples that tell %product% to install project
                dependencies and enable %feature%:</p>

                <tabs>
                    <tab title="Qodana for JVM">
                        <code style="block" lang="yaml">
                            include:
                              - name: CheckDependencyLicenses
                        </code>
                    </tab>
                    <tab title="Qodana for PHP">
                        <code style="block" lang="yaml">
                            bootstrap: |+
                              # Install dependencies
                              php composer.phar update

                            include:
                              - name: CheckDependencyLicenses
                        </code>
                    </tab>
                    <tab title="Qodana for JS">
                        <code style="block" lang="yaml">
                            bootstrap: |+
                              # Use npm to install dependencies
                              npm install

                              # Install Yarn
                              npm install -g yarn

                              # Use Yarn to install dependencies
                              yarn install --frozen-lockfile

                            include:
                              - name: CheckDependencyLicenses
                        </code>
                    </tab>
                    <tab title="Qodana for Python">
                        <code style="block" lang="yaml">
                            bootstrap: |+
                              # Install dependencies
                              pip install -r requirements.txt

                              # Remove .idea from the project root
                              rm -rf .idea

                            include:
                              - name: CheckDependencyLicenses
                        </code>
                    </tab>
                    <tab title="Qodana for Go">
                        <code style="block" lang="yaml">
                            bootstrap: |+
                              # Install dependencies
                              go mod tidy

                            include:
                              - name: CheckDependencyLicenses
                        </code>
                    </tab>
                </tabs>

        <p>You can also extend %feature% configuration as shown in the subsequent sections.</p>

        <chapter title="Ignore dependencies" id="license-audit-ignoring-dependencies">
            <p>You can use the <code>dependencyIgnores</code> option to ignore a license of a specific dependency in your project:</p>
            <code style="block" lang="yaml">
                dependencyIgnores:
                  - name: "dependency/name"
            </code>
        </chapter>

        <chapter title="Allow or prohibit dependency licenses" id="license-allow-prohibit-licenses">
            <p>You can override the license matrix and specify the list of
                dependency licenses that are allowed or prohibited for a specific project license.</p>
            <p>In this snippet, the <code>keys</code> key accepts application licenses, and the <code>allowed</code> and
                <code>prohibited</code> keys accept the lists of allowed and prohibited dependency licenses respectively.
                As a result, the <code>AGPL-3.0-only</code> becomes compatible with the <code>AFL-2.0</code> project
                license, while the <code>Apache-1.0</code> dependency license becomes incompatible.</p>
            <code style="block" lang="yaml">
                licenseRules:
                  - keys:
                      - "AFL-2.0"
                    allowed:
                      - "AGPL-3.0-only"
                    prohibited:
                      - "Apache-1.0"
            </code>

            <tip>
                All keys from this sample can accept several values.
            </tip>


        </chapter>

        <chapter title="Override a dependency license" id="license-audit-override-license">
            <p>You can override a dependency license identifier. This can be useful when a dependency is dual-licensed,
                and you want to omit some license, or when the license name cannot be detected from the dependency
                sources correctly.</p>
            <p>Using this sample,
                %product% will detect only the <code>CDDL-1.1</code> and
                <code>GPL-2.0-with-classpath-exception</code> licenses for <code>jaxb-runtime</code> version 2.3.1.</p>

            <code style="block" lang="yaml">
                dependencyOverrides:
                  - name: "jaxb-runtime"
                    version: "2.3.1"
                    url: "https://github.com/javaee/jaxb-v2"
                    licenses:
                      - key: "CDDL-1.1"
                        url: "https://github.com/javaee/jaxb-v2/blob/master/LICENSE"
                      - key: "GPL-2.0-with-classpath-exception"
                        url: "https://github.com/javaee/jaxb-v2/blob/master/LICENSE"
            </code>
        </chapter>

        <chapter title="Create custom dependencies" id="license-audit-custom-dependencies">
            <p>If you want to include the dependency that should be mentioned in the report but is impossible to detect
                from the project sources, you can use the <code>customDependencies</code> key to specify it:</p>

            <code style="block" lang="yaml">
                customDependencies:
                  - name: ".babelrc JSON Schema (.babelrc-schema.json)"
                    version: "JSON schema for Babel 6+ configuration files"
                    licenses:
                      - key: "Apache-2.0"
                        url: "https://github.com/SchemaStore/schemastore/blob/master/LICENSE"
            </code>
        </chapter>

    </chapter>

    <chapter title="Verifying data" id="license-audit-verifying-data">
        <include src="lib_qd.xml" include-id="license-audit-tab" use-filter="license-audit,empty"/>
    </chapter>

</topic>
