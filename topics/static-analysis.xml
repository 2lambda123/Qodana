<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://resources.jetbrains.com/stardust/html-entities.dtd">

<topic xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/stardust/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       title="Static analysis"
       id="static-analysis">

    <p>Qodana provides static program analysis meaning the analysis of computer software performed without executing
        any programs or scripts.</p>

    <p>The term is usually applied to analysis performed by an automated tool, with human analysis typically being
        called "program understanding", program comprehension, or code review. In the last of these, software
        inspection and software walkthroughs are also used. In most cases the analysis is performed on some version
        of a program's source code, and, in other cases, on some form of its object code. </p>

    <p>On the one hand, there’s static code analysis, a way for developers to test their code without actually
        executing it — this is called a non-run-time environment. Static code analysis tools offer an incredibly
        efficient way to find programming faults and display them to software engineers. With it, errors can be picked
        up long before they end up causing havoc when the code is released or put live on a server. Static analysis is
        generally considered the more thorough way to analyze code. It also has the potential to be the more economical
        option. Identifying code errors in early stages means that they are typically less expensive to fix than errors
        that become stuck in the system. Taken from https://blog.codacy.com/everything-you-need-to-know-about-static-code-analysis/</p>

</topic>
